#!/usr/bin/env python

import sys
import tempfile

import pyenv


def worker():
    all_actions = pyenv.Actions.get_all_actions()

    try:
        pyenv.options.TopLevelOptions.parse(sys.argv, all_actions)
    except pyenv.OptionParsingError, e:
        # no shell at this point, so we've already dumped everything to stderr.  just reraise.
        raise

    # TODO: set up a better module database, based on PYENV_PATH
    mdb = pyenv.ModuleDatabase()

    # TODO: figure out which shell...
    shell = pyenv.TcshShell()

    env = pyenv.Environment(shell, mdb)

    action_requested = sys.argv[1]          # TODO: this should be given to us by the option
                                            # parser.
    action_arguments = sys.argv[2:]

    assert(action_requested in all_actions)
    action_processor = all_actions[action_requested]
    action_processor(action_arguments, env, shell, mdb)

    env.shutdown()

    wlog = pyenv.WarningLog.get_logger()

    for log_msg in wlog.get_log():
        shell.message(log_msg)

    return shell.dump_state()



def main():
    try:
        shell_state = worker()

        # TODO: write this to a temp file.
        sys.stdout.write("\n".join(shell_state) + "\n")
    except pyenv.OptionParsingError, e:
        # ignore the error if it gets this far up.
        pass
    finally:
        # TODO: write the name of the temp file to the shell.
        pass

if __name__ == "__main__":
    main()
